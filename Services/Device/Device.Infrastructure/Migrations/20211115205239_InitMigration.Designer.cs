// <auto-generated />
using System;
using Device.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Device.Infrastructure.Migrations
{
    [DbContext(typeof(DeviceContext))]
    [Migration("20211115205239_InitMigration")]
    partial class InitMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Device.Domain.Entities.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("AvgConsumption")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DeviceUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("MaxConsumption")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DeviceUserId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Device.Domain.Entities.DeviceUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeviceUser");
                });

            modelBuilder.Entity("Device.Domain.Entities.Device", b =>
                {
                    b.HasOne("Device.Domain.Entities.DeviceUser", "DeviceUser")
                        .WithMany("UserDevices")
                        .HasForeignKey("DeviceUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("Device.Domain.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.HasKey("DeviceId");

                            b1.ToTable("Devices");

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.OwnsOne("Device.Domain.Entities.DeviceSensor", "DeviceSensor", b1 =>
                        {
                            b1.Property<Guid>("DeviceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("MaxValue")
                                .HasColumnType("float");

                            b1.Property<string>("SensorPublicId")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DeviceId");

                            b1.ToTable("Devices");

                            b1.WithOwner()
                                .HasForeignKey("DeviceId");
                        });

                    b.Navigation("Address");

                    b.Navigation("DeviceSensor");

                    b.Navigation("DeviceUser");
                });

            modelBuilder.Entity("Device.Domain.Entities.DeviceUser", b =>
                {
                    b.Navigation("UserDevices");
                });
#pragma warning restore 612, 618
        }
    }
}
